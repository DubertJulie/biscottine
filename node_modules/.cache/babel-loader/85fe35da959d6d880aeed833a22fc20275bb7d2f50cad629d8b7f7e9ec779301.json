{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './IngredientInput.css';\nimport mascotteBiscottine from '../assets/mascotte.png';\nimport LogoInputIngredient from '../assets/logo.png';\nimport recettesData from '../assets/recipes.json'; // Importer le JSON\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientInput() {\n  _s();\n  const [ingredient, setIngredient] = useState('');\n  const [filteredRecettes, setFilteredRecettes] = useState([]);\n\n  // Vérifier que les données sont correctement importées\n  console.log(recettesData); // Ajoute ce log pour voir les données du JSON\n\n  // Filtrer les recettes quand l'input change\n  useEffect(() => {\n    if (!ingredient) {\n      // Si l'input est vide, on affiche toutes les recettes\n      setFilteredRecettes(recettesData);\n      return;\n    }\n    const result = recettesData.filter(recette =>\n    // Filtrer si l'un des ingrédients contient le texte saisi\n    recette.ingredients.some(ingredientInRecette => typeof ingredientInRecette.name === 'string' && ingredientInRecette.name.toLowerCase().includes(ingredient.toLowerCase())));\n    setFilteredRecettes(result);\n  }, [ingredient]); // Re-calculer le filtrage à chaque changement d'ingrédient\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encadrementIngredientInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"biscottineMascotteInput\",\n      src: mascotteBiscottine,\n      alt: \"Mascotte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"titreLogoInput\",\n      src: LogoInputIngredient,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"texteSousLogoInput\",\n      children: [\"Trouve-moi \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 58\n      }, this), \" une recette !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"ingredientInput\",\n      type: \"text\",\n      placeholder: \"Entrez un ingr\\xE9dient\",\n      value: ingredient,\n      onChange: e => setIngredient(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredRecettes.length > 0 ? filteredRecettes.map(recette => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recette.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recette.url,\n          alt: recette.title,\n          style: {\n            width: '100px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Temps de pr\\xE9paration :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 32\n          }, this), \" \", recette.preparation_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ingr\\xE9dients :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recette.ingredients.map((ingredientInRecette, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [ingredientInRecette.quantity, \" \", ingredientInRecette.unit, \" de \", ingredientInRecette.name]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xC9tapes :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: recette.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: step\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, recette.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Aucune recette trouv\\xE9e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(IngredientInput, \"aWtw8f2fvQWz7xDs9qi7TQjwhdU=\");\n_c = IngredientInput;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["useState","useEffect","mascotteBiscottine","LogoInputIngredient","recettesData","jsxDEV","_jsxDEV","IngredientInput","_s","ingredient","setIngredient","filteredRecettes","setFilteredRecettes","console","log","result","filter","recette","ingredients","some","ingredientInRecette","name","toLowerCase","includes","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","title","url","style","width","height","preparation_time","index","quantity","unit","steps","step","_c","$RefreshReg$"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './IngredientInput.css';\r\nimport mascotteBiscottine from '../assets/mascotte.png';\r\nimport LogoInputIngredient from '../assets/logo.png';\r\nimport recettesData from '../assets/recipes.json'; // Importer le JSON\r\n\r\nfunction IngredientInput() {\r\n    const [ingredient, setIngredient] = useState('');\r\n    const [filteredRecettes, setFilteredRecettes] = useState([]);\r\n\r\n    // Vérifier que les données sont correctement importées\r\n    console.log(recettesData);  // Ajoute ce log pour voir les données du JSON\r\n\r\n    // Filtrer les recettes quand l'input change\r\n    useEffect(() => {\r\n        if (!ingredient) {\r\n            // Si l'input est vide, on affiche toutes les recettes\r\n            setFilteredRecettes(recettesData);\r\n            return;\r\n        }\r\n\r\n        const result = recettesData.filter((recette) => \r\n            // Filtrer si l'un des ingrédients contient le texte saisi\r\n            recette.ingredients.some((ingredientInRecette) => \r\n                typeof ingredientInRecette.name === 'string' && \r\n                ingredientInRecette.name.toLowerCase().includes(ingredient.toLowerCase())\r\n            )\r\n        );\r\n        setFilteredRecettes(result);\r\n    }, [ingredient]);  // Re-calculer le filtrage à chaque changement d'ingrédient\r\n\r\n    return (\r\n        <div className=\"encadrementIngredientInput\">\r\n            {/* Image de la mascotte */}\r\n            <img className=\"biscottineMascotteInput\" src={mascotteBiscottine} alt=\"Mascotte\" />\r\n\r\n            {/* Image du logo */}\r\n            <img className=\"titreLogoInput\" src={LogoInputIngredient} alt=\"Logo\" />\r\n\r\n            {/* Texte sous le logo */}\r\n            <p className=\"texteSousLogoInput\">Trouve-moi <br /> une recette !</p>\r\n\r\n            {/* Champ d'entrée pour l'ingrédient */}\r\n            <input \r\n                className=\"ingredientInput\" \r\n                type=\"text\" \r\n                placeholder=\"Entrez un ingrédient\" \r\n                value={ingredient}\r\n                onChange={(e) => setIngredient(e.target.value)} \r\n            />\r\n\r\n            {/* Afficher les recettes filtrées */}\r\n            <ul>\r\n                {filteredRecettes.length > 0 ? (\r\n                    filteredRecettes.map((recette) => (\r\n                        <li key={recette.title}>\r\n                            <h3>{recette.title}</h3>\r\n                            <img src={recette.url} alt={recette.title} style={{ width: '100px', height: '100px' }} />\r\n                            <p><strong>Temps de préparation :</strong> {recette.preparation_time}</p>\r\n                            <p><strong>Ingrédients :</strong></p>\r\n                            <ul>\r\n                                {recette.ingredients.map((ingredientInRecette, index) => (\r\n                                    <li key={index}>\r\n                                        {ingredientInRecette.quantity} {ingredientInRecette.unit} de {ingredientInRecette.name}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                            <p><strong>Étapes :</strong></p>\r\n                            <ol>\r\n                                {recette.steps.map((step, index) => (\r\n                                    <li key={index}>{step}</li>\r\n                                ))}\r\n                            </ol>\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <li>Aucune recette trouvée</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngredientInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}