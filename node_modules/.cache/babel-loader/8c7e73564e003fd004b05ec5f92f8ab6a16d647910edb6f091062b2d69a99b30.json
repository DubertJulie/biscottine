{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './IngredientInput.css';\nimport mascotteBiscottine from '../assets/mascotte.png';\nimport LogoInputIngredient from '../assets/logo.png';\nimport recettesData from './data/recettes.json'; // Importer le JSON\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientInput() {\n  _s();\n  const [ingredient, setIngredient] = useState('');\n  const [filteredRecettes, setFilteredRecettes] = useState([]);\n\n  // Filtrer les recettes quand l'input change\n  useEffect(() => {\n    const result = recettesData.filter(recette => recette.ingredients.some(ingredientInRecette => ingredientInRecette.toLowerCase().includes(ingredient.toLowerCase())));\n    setFilteredRecettes(result);\n  }, [ingredient]); // Re-calculer le filtrage à chaque changement d'ingrédient\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encadrementIngredientInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"biscottineMascotteInput\",\n      src: mascotteBiscottine,\n      alt: \"Mascotte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"titreLogoInput\",\n      src: LogoInputIngredient,\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"texteSousLogoInput\",\n      children: [\"Trouve-moi \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 58\n      }, this), \" une recette !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"ingredientInput\",\n      type: \"text\",\n      placeholder: \"Entrez un ingr\\xE9dient\",\n      value: ingredient,\n      onChange: e => setIngredient(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredRecettes.length > 0 ? filteredRecettes.map(recette => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: recette.nom\n      }, recette.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Aucune recette trouv\\xE9e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(IngredientInput, \"aWtw8f2fvQWz7xDs9qi7TQjwhdU=\");\n_c = IngredientInput;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["useState","useEffect","mascotteBiscottine","LogoInputIngredient","recettesData","jsxDEV","_jsxDEV","IngredientInput","_s","ingredient","setIngredient","filteredRecettes","setFilteredRecettes","result","filter","recette","ingredients","some","ingredientInRecette","toLowerCase","includes","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","nom","id","_c","$RefreshReg$"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './IngredientInput.css';\r\nimport mascotteBiscottine from '../assets/mascotte.png';\r\nimport LogoInputIngredient from '../assets/logo.png';\r\nimport recettesData from './data/recettes.json'; // Importer le JSON\r\n\r\nfunction IngredientInput() {\r\n    const [ingredient, setIngredient] = useState('');\r\n    const [filteredRecettes, setFilteredRecettes] = useState([]);\r\n\r\n    // Filtrer les recettes quand l'input change\r\n    useEffect(() => {\r\n        const result = recettesData.filter((recette) => \r\n            recette.ingredients.some(ingredientInRecette => \r\n                ingredientInRecette.toLowerCase().includes(ingredient.toLowerCase())\r\n            )\r\n        );\r\n        setFilteredRecettes(result);\r\n    }, [ingredient]);  // Re-calculer le filtrage à chaque changement d'ingrédient\r\n\r\n    return (\r\n        <div className=\"encadrementIngredientInput\">\r\n            {/* Image de la mascotte */}\r\n            <img className=\"biscottineMascotteInput\" src={mascotteBiscottine} alt=\"Mascotte\" />\r\n\r\n            {/* Image du logo */}\r\n            <img className=\"titreLogoInput\" src={LogoInputIngredient} alt=\"Logo\" />\r\n\r\n            {/* Texte sous le logo */}\r\n            <p className=\"texteSousLogoInput\">Trouve-moi <br /> une recette !</p>\r\n\r\n            {/* Champ d'entrée pour l'ingrédient */}\r\n            <input \r\n                className=\"ingredientInput\" \r\n                type=\"text\" \r\n                placeholder=\"Entrez un ingrédient\" \r\n                value={ingredient}\r\n                onChange={(e) => setIngredient(e.target.value)} \r\n            />\r\n\r\n            {/* Afficher les recettes filtrées */}\r\n            <ul>\r\n                {filteredRecettes.length > 0 ? (\r\n                    filteredRecettes.map((recette) => (\r\n                        <li key={recette.id}>{recette.nom}</li>\r\n                    ))\r\n                ) : (\r\n                    <li>Aucune recette trouvée</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngredientInput;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,uBAAuB;AAC9B,OAAOC,kBAAkB,MAAM,wBAAwB;AACvD,OAAOC,mBAAmB,MAAM,oBAAoB;AACpD,OAAOC,YAAY,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAGT,YAAY,CAACU,MAAM,CAAEC,OAAO,IACvCA,OAAO,CAACC,WAAW,CAACC,IAAI,CAACC,mBAAmB,IACxCA,mBAAmB,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,CAAC,CAAC,CACvE,CACJ,CAAC;IACDP,mBAAmB,CAACC,MAAM,CAAC;EAC/B,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAE;;EAEnB,oBACIH,OAAA;IAAKe,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBAEvChB,OAAA;MAAKe,SAAS,EAAC,yBAAyB;MAACE,GAAG,EAAErB,kBAAmB;MAACsB,GAAG,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGnFtB,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAACE,GAAG,EAAEpB,mBAAoB;MAACqB,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGvEtB,OAAA;MAAGe,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,aAAW,eAAAhB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,kBAAc;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGrEtB,OAAA;MACIe,SAAS,EAAC,iBAAiB;MAC3BQ,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,yBAAsB;MAClCC,KAAK,EAAEtB,UAAW;MAClBuB,QAAQ,EAAGC,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAGFtB,OAAA;MAAAgB,QAAA,EACKX,gBAAgB,CAACwB,MAAM,GAAG,CAAC,GACxBxB,gBAAgB,CAACyB,GAAG,CAAErB,OAAO,iBACzBT,OAAA;QAAAgB,QAAA,EAAsBP,OAAO,CAACsB;MAAG,GAAxBtB,OAAO,CAACuB,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACzC,CAAC,gBAEFtB,OAAA;QAAAgB,QAAA,EAAI;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACpB,EAAA,CA9CQD,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AAgDxB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}