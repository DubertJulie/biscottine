{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Le json \nimport data from '../data/recipes.json';\n// le css \nimport './IngredientInput.css';\n// css des card\nimport './RecipeResults.css';\n// image de la mascotte \nimport mascotteBiscottine from '../assets/mascotte.png';\n// le logo \nimport logoInputIngredient from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientInput() {\n  _s();\n  // stock la recherche \n  const [saisie, setSaisie] = useState(\"\");\n  // Pourquoi const car tu modifie l'état lui meme et non saisie\n  // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\n\n  // garder les ingredient \n  const [ingredientGarder, setIngredientGarder] = useState([]);\n  // ingredient eviter\n  const [ingredientEviter, setIngredientEviter] = useState([]);\n  // Ici on recupere la saisie de l'utilisateur et met a jour saisie\n\n  const [selectedTags, setSelectedTags] = useState([]);\n  const rechercheChangement = event => {\n    setSaisie(event.target.value);\n  };\n\n  // permet de suprimer des ingredient de \"eviter \" \n  const suprimerDeEviter = ingredient => {\n    setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n  // Pourquoi prev ? une convention pour dire précédent sa represente l'etat avant le changement \n  //   permet de suprimer les ingredient de \"garder\"  \n  const suprimerDeGarder = ingredient => {\n    setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n  const toggleTag = tag => {\n    setSelectedTags(prev => prev.includes(tag) ? prev.filter(t => t !== tag) : [...prev, tag]);\n  };\n  const filteredRecipes = data.filter(recipe => {\n    const recetteIngredients = recipe.ingredients.map(ing => ing.name.toLowerCase());\n    // Vérifie si tous les ingrédients gardés sont dans la recette\n    const contientIngredientsGarder = ingredientGarder.length === 0 || ingredientGarder.some(ingredient => recetteIngredients.includes(ingredient.name.toLowerCase()));\n    // Vérifie que la recette ne contient pas d'ingrédients évités\n    const contientIngredientsEviter = ingredientEviter.some(ingredient => recetteIngredients.includes(ingredient.name.toLowerCase()));\n    const contientTags = selectedTags.length === 0 || selectedTags.every(tag => recipe.tags.includes(tag));\n    // Retourne true si la recette contient tous les ingrédients gardés et aucun évité\n    return contientIngredientsGarder && !contientIngredientsEviter && contientTags;\n  });\n\n  // c'est un if else pour donner le choix si lélément est a éviter ou garder \n  const ingredientChoix = (ingredient, choix) => {\n    if (choix === \"Garder\") {\n      setIngredientGarder(prev => [...prev, ingredient]);\n      setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n    } else if (choix === \"Eviter\") {\n      setIngredientEviter(prev => [...prev, ingredient]);\n      setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n    }\n  };\n  // sa permet de selectionner uniquement les ingredient dans le tableau \n  const toutIngredients = data.flatMap(recipe => recipe.ingredients);\n  const ingredientUnique = new Set();\n  const filtreIngredients = [];\n  toutIngredients.forEach(ingredient => {\n    if (!ingredientUnique.has(ingredient.name) && ingredient.name.toLowerCase().includes(saisie.toLowerCase())) {\n      filtreIngredients.push(ingredient);\n      ingredientUnique.add(ingredient.name);\n    }\n  });\n  const toutLesTags = Array.from(new Set(data.flatMap(recipe => recipe.tags)));\n  const isColorTag = tag => tag.startsWith(\"#\");\n  const getTextColor = bgColor => {\n    // Retire le \"#\" au début\n    const color = bgColor.substring(1);\n    // Convertit la couleur hexadécimale en RGB\n    const rgb = parseInt(color, 16);\n    const r = rgb >> 16 & 0xff;\n    const g = rgb >> 8 & 0xff;\n    const b = rgb >> 0 & 0xff;\n    // Calcul de la luminosité de la couleur\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    return brightness > 125 ? 'black' : 'white';\n  };\n  function RecipeCard(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RecipeResults-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.url,\n        className: \"RecipeResults-card-img\",\n        alt: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RecipeResults-card-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RecipeResults-card-title\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RecipeResults-card-preparation\",\n          children: props.preparation_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n  function RecipeResults({\n    recipe\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RecipeResults\",\n      children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n        url: recipe.url,\n        title: recipe.title,\n        preparation_time: recipe.preparation_time,\n        tags: recipe.tags\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encadrementIngredientInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"encadrementRecherche\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"biscottineMascotteInput\",\n        src: mascotteBiscottine,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"titreLogoInput\",\n        src: logoInputIngredient,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"texteSousLogoInput\",\n        children: [\"Trouve-moi \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 62\n        }, this), \" une recette !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagFilterButtons\",\n        children: toutLesTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedTags.includes(tag) ? 'tagButton active' : 'tagButton',\n          onClick: () => toggleTag(tag),\n          style: {\n            backgroundColor: isColorTag(tag) ? tag : tagColors[tag] || 'lightgray',\n            // Couleur de fond\n            color: isColorTag(tag) ? getTextColor(tag) : 'white' // Couleur du texte selon la luminosité\n          },\n          children: [isColorTag(tag) ? \"Couleur\" : tag, \"  \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"choisis tes ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"ingredientInput\",\n        value: saisie,\n        onChange: rechercheChangement,\n        type: \"text\",\n        placeHolder: \"Recherche d'ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), saisie !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alignementInputRecherche\",\n        children: filtreIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placementInputIngredient\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"inputIngredientName\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"ingredientRechercheInput\",\n              children: ingredient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonGarder\",\n            onClick: () => ingredientChoix(ingredient, \"Garder\"),\n            disabled: ingredientGarder.some(item => item.name === ingredient.name)\n            // le disabled dit si l'ingredient est garder tu ne pourras pas reclicker dessus \n            // some renverras true si item.name est strictement egal a ingredient.name \n            ,\n            children: \" + \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonEviter\",\n            onClick: () => ingredientChoix(ingredient, \"Eviter\"),\n            disabled: ingredientEviter.some(item => item.name === ingredient.name),\n            children: \" - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"textIngredientSelect\",\n          children: \"Ingr\\xE9dients gard\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encradrementGarderIngredient\",\n          children: ingredientGarder.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredientSelectionnerGarder\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cadreIngredientSelectioner\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonSuprimer\",\n                onClick: () => suprimerDeGarder(ingredient),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ingredient.url1,\n                alt: \"\",\n                className: \"choixIngredientImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"textIngredientSousImg\",\n                children: [ingredient.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"textIngredientSelect\",\n          children: \"Ingr\\xE9dients \\xE9vit\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encradrementGarderIngredient\",\n          children: ingredientEviter.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredientSelectionnerGarder\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cadreIngredientSelectioner\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonSuprimer\",\n                onClick: () => suprimerDeEviter(ingredient),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ingredient.url1,\n                alt: \"\",\n                className: \"choixIngredientEviterImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"textIngredientSousImg\",\n                children: [ingredient.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), filteredRecipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultatRecherchePlat\",\n      children: filteredRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(RecipeResults, {\n        recipe: recipe\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune recette \\xE0 votre go\\xFBt ? Hmm... vous aimez sans doute la simplicit\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(IngredientInput, \"QYTEo8qbf8D281haHHjCJNFnddQ=\");\n_c = IngredientInput;\n;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["React","useState","data","mascotteBiscottine","logoInputIngredient","jsxDEV","_jsxDEV","IngredientInput","_s","saisie","setSaisie","ingredientGarder","setIngredientGarder","ingredientEviter","setIngredientEviter","selectedTags","setSelectedTags","rechercheChangement","event","target","value","suprimerDeEviter","ingredient","prev","filter","item","name","suprimerDeGarder","toggleTag","tag","includes","t","filteredRecipes","recipe","recetteIngredients","ingredients","map","ing","toLowerCase","contientIngredientsGarder","length","some","contientIngredientsEviter","contientTags","every","tags","ingredientChoix","choix","toutIngredients","flatMap","ingredientUnique","Set","filtreIngredients","forEach","has","push","add","toutLesTags","Array","from","isColorTag","startsWith","getTextColor","bgColor","color","substring","rgb","parseInt","r","g","b","brightness","RecipeCard","props","className","children","src","url","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","preparation_time","RecipeResults","id","index","onClick","style","backgroundColor","tagColors","onChange","type","placeHolder","disabled","url1","_c","$RefreshReg$"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n// Le json \r\nimport data from '../data/recipes.json';\r\n// le css \r\nimport './IngredientInput.css';\r\n// css des card\r\nimport './RecipeResults.css';\r\n// image de la mascotte \r\nimport mascotteBiscottine from '../assets/mascotte.png'\r\n// le logo \r\nimport logoInputIngredient from '../assets/logo.png'\r\n\r\nfunction IngredientInput() {\r\n    // stock la recherche \r\n    const [saisie, setSaisie] = useState(\"\");\r\n    // Pourquoi const car tu modifie l'état lui meme et non saisie\r\n    // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\r\n\r\n    // garder les ingredient \r\n    const [ingredientGarder, setIngredientGarder] = useState([]);\r\n    // ingredient eviter\r\n    const [ingredientEviter, setIngredientEviter] = useState([]);\r\n    // Ici on recupere la saisie de l'utilisateur et met a jour saisie\r\n\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n\r\n    const rechercheChangement = (event) => {\r\n        setSaisie(event.target.value);\r\n    };\r\n\r\n    // permet de suprimer des ingredient de \"eviter \" \r\n    const suprimerDeEviter = (ingredient) => {\r\n        setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n    // Pourquoi prev ? une convention pour dire précédent sa represente l'etat avant le changement \r\n    //   permet de suprimer les ingredient de \"garder\"  \r\n    const suprimerDeGarder = (ingredient) => {\r\n        setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n\r\n    const toggleTag = (tag) => {\r\n        setSelectedTags((prev) =>\r\n            prev.includes(tag)\r\n                ? prev.filter((t) => t !== tag)\r\n                : [...prev, tag]\r\n        );\r\n    };\r\n    const filteredRecipes = data.filter((recipe) => {\r\n        const recetteIngredients = recipe.ingredients.map(ing => ing.name.toLowerCase());\r\n        // Vérifie si tous les ingrédients gardés sont dans la recette\r\n        const contientIngredientsGarder = ingredientGarder.length === 0 ||\r\n            ingredientGarder.some((ingredient) =>\r\n                recetteIngredients.includes(ingredient.name.toLowerCase())\r\n            );\r\n        // Vérifie que la recette ne contient pas d'ingrédients évités\r\n        const contientIngredientsEviter = ingredientEviter.some((ingredient) =>\r\n            recetteIngredients.includes(ingredient.name.toLowerCase())\r\n        );\r\n\r\n        const contientTags = selectedTags.length === 0 || selectedTags.every((tag) =>\r\n            recipe.tags.includes(tag)\r\n        );\r\n        // Retourne true si la recette contient tous les ingrédients gardés et aucun évité\r\n        return contientIngredientsGarder && !contientIngredientsEviter && contientTags;\r\n    });\r\n\r\n    // c'est un if else pour donner le choix si lélément est a éviter ou garder \r\n    const ingredientChoix = (ingredient, choix) => {\r\n        if (choix === \"Garder\") {\r\n            setIngredientGarder((prev) => [...prev, ingredient]);\r\n            setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        } else if (choix === \"Eviter\") {\r\n            setIngredientEviter((prev) => [...prev, ingredient]);\r\n            setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        }\r\n    };\r\n    // sa permet de selectionner uniquement les ingredient dans le tableau \r\n    const toutIngredients = data.flatMap(recipe => recipe.ingredients);\r\n\r\n    const ingredientUnique = new Set();\r\n    const filtreIngredients = [];\r\n\r\n    toutIngredients.forEach(ingredient => {\r\n        if (!ingredientUnique.has(ingredient.name) && ingredient.name.toLowerCase().includes(saisie.toLowerCase())) {\r\n            filtreIngredients.push(ingredient);\r\n            ingredientUnique.add(ingredient.name);\r\n        }\r\n    });\r\n    const toutLesTags = Array.from(new Set(data.flatMap(recipe => recipe.tags)));\r\n\r\n    const isColorTag = (tag) => tag.startsWith(\"#\");\r\n\r\n    const getTextColor = (bgColor) => {\r\n        // Retire le \"#\" au début\r\n        const color = bgColor.substring(1);\r\n        // Convertit la couleur hexadécimale en RGB\r\n        const rgb = parseInt(color, 16);\r\n        const r = (rgb >> 16) & 0xff;\r\n        const g = (rgb >> 8) & 0xff;\r\n        const b = (rgb >> 0) & 0xff;\r\n        // Calcul de la luminosité de la couleur\r\n        const brightness = (r * 299 + g * 587 + b * 114) / 1000;\r\n        return brightness > 125 ? 'black' : 'white';\r\n    };\r\n\r\n\r\n    function RecipeCard(props) {\r\n        return (\r\n            <div className=\"RecipeResults-card\">\r\n                <img src={props.url} className=\"RecipeResults-card-img\" alt={props.title} />\r\n                <div className=\"RecipeResults-card-info\">\r\n                    <div className=\"RecipeResults-card-title\">{props.title}</div>\r\n                    <div className=\"RecipeResults-card-preparation\">{props.preparation_time}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    function RecipeResults({ recipe }) {\r\n        return (\r\n            <div className=\"RecipeResults\">\r\n                <RecipeCard\r\n                    key={recipe.id}\r\n                    url={recipe.url}\r\n                    title={recipe.title}\r\n                    preparation_time={recipe.preparation_time}\r\n                    tags={recipe.tags}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"encadrementIngredientInput\">\r\n            <div className='encadrementRecherche'>\r\n                {/* Image de la mascotte  */}\r\n                <img className='biscottineMascotteInput' src={mascotteBiscottine} alt='' />\r\n                {/* Image du logo  */}\r\n                <img className='titreLogoInput' src={logoInputIngredient} alt='' />\r\n                {/* Texte entredessous du Logo  */}\r\n                <p className='texteSousLogoInput'>Trouve-moi <br /> une recette !</p>\r\n\r\n                <div className=\"tagFilterButtons\">\r\n                    {toutLesTags.map((tag, index) => (\r\n                        <button\r\n                            key={index}\r\n                            className={selectedTags.includes(tag) ? 'tagButton active' : 'tagButton'}\r\n                            onClick={() => toggleTag(tag)}\r\n                            style={{\r\n                                backgroundColor: isColorTag(tag) ? tag : (tagColors[tag] || 'lightgray'),  // Couleur de fond\r\n                                color: isColorTag(tag) ? getTextColor(tag) : 'white'  // Couleur du texte selon la luminosité\r\n                            }}\r\n                        >\r\n                            {isColorTag(tag) ? \"Couleur\" : tag}  {/* Affiche \"Couleur\" pour les tags de couleur */}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <p>choisis tes ingredient</p>\r\n                {/* input pour la saisie utilisateur  */}\r\n                <input className=\"ingredientInput\"\r\n                    value={saisie}\r\n                    onChange={rechercheChangement}\r\n                    type=\"text\"\r\n                    placeHolder=\"Recherche d'ingredients\" />\r\n\r\n                {/* resultat recherche  */}\r\n                {saisie !== '' && (\r\n                    <div className=\"alignementInputRecherche\">\r\n                        {filtreIngredients.map((ingredient) => (\r\n                            <div className=\"placementInputIngredient\">\r\n\r\n                                <ul className='inputIngredientName'>\r\n                                    {/* ce qui aparait dans la barre de recherche  */}\r\n                                    <li className='ingredientRechercheInput'>{ingredient.name}</li>\r\n                                </ul>\r\n                                {/* button garder  */}\r\n                                <button\r\n                                    className='buttonGarder'\r\n                                    onClick={() => ingredientChoix(ingredient, \"Garder\")}\r\n                                    disabled={ingredientGarder.some(item => item.name === ingredient.name)}\r\n                                // le disabled dit si l'ingredient est garder tu ne pourras pas reclicker dessus \r\n                                // some renverras true si item.name est strictement egal a ingredient.name \r\n                                > + </button>\r\n\r\n                                {/* button  eviter  */}\r\n                                <button\r\n                                    className='buttonEviter'\r\n                                    onClick={() => ingredientChoix(ingredient, \"Eviter\")}\r\n                                    disabled={ingredientEviter.some(item => item.name === ingredient.name)}\r\n                                > - </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {/* ingredient a gardé  */}\r\n                <div>\r\n                    <p className='textIngredientSelect'>Ingrédients gardés</p>\r\n                    <div className='encradrementGarderIngredient'>\r\n                        {ingredientGarder.map((ingredient, index) => (\r\n                            <div className='ingredientSelectionnerGarder' key={index}>\r\n                                <div className='cadreIngredientSelectioner'>\r\n                                    <button className='buttonSuprimer' onClick={() => suprimerDeGarder(ingredient)}>\r\n                                        X</button>\r\n                                    <img src={ingredient.url1}\r\n                                        alt=''\r\n                                        className=\"choixIngredientImage\" />\r\n                                    <p className='textIngredientSousImg'>{ingredient.name} </p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {/* ingredient a évité  */}\r\n                    <p className='textIngredientSelect' >Ingrédients évités</p>\r\n                    <div className='encradrementGarderIngredient'>\r\n                        {ingredientEviter.map((ingredient, index) => (\r\n                            <div className='ingredientSelectionnerGarder' key={index}>\r\n                                <div className='cadreIngredientSelectioner'>\r\n                                    <button className='buttonSuprimer' onClick={() => suprimerDeEviter(ingredient)}>\r\n                                        X</button>\r\n                                    <img src={ingredient.url1}\r\n                                        alt=''\r\n                                        className=\"choixIngredientEviterImage\" />\r\n                                    <p className='textIngredientSousImg'>{ingredient.name} </p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* la zone interessante Pour ton image */}\r\n            {filteredRecipes.length > 0 ? (\r\n                <div className=\"resultatRecherchePlat\">\r\n                    {filteredRecipes.map((recipe, index) => (\r\n                        <RecipeResults key={index} recipe={recipe} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>Aucune recette à votre goût ? Hmm... vous aimez sans doute la simplicité.</p>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\nexport default IngredientInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}