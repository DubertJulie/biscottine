{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Le json \nimport data from '../data/recipes.json';\n// le css \nimport './IngredientInput.css';\n// image de la mascotte \nimport mascotteBiscottine from '../assets/mascotte.png';\n// le logo \nimport logoInputIngredient from '../assets/logo.png';\nimport RecipeResults from './components/RecipeResults.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientInput() {\n  _s();\n  // stock la recherche \n  const [saisie, setSaisie] = useState(\"\");\n  // Pourquoi const car tu modifie l'état lui meme et non saisie\n  // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\n\n  // garder les ingredient \n  const [ingredientGarder, setIngredientGarder] = useState([]);\n  // Le tableau vide permet que quand l'utilisateur press le button sa rentre dans le tableau vide\n\n  // ingredient eviter\n  const [ingredientEviter, setIngredientEviter] = useState([]);\n\n  // Ici on recupere la saisie de l'utilisateur et met a jour saisie\n  const rechercheChangement = event => {\n    setSaisie(event.target.value);\n  };\n  // event convention pour dire Evenement parfois racourci par e \n\n  // permet de suprimer des ingredient de \"eviter \" \n  const suprimerDeEviter = ingredient => {\n    setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n  // Pourquoi prev ? une convention pour dire précédent sa represente l'etat avant le changement \n\n  //   permet de suprimer les ingredient de \"garder\"  \n  const suprimerDeGarder = ingredient => {\n    setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n  const filteredRecipes = data.filter(recipe => {\n    const recetteIngredients = recipe.ingredients.map(ing => ing.name.toLowerCase());\n\n    // Vérifie si tous les ingrédients gardés sont dans la recette\n    const contientIngredientsGarder = ingredientGarder.every(ingredient => recetteIngredients.includes(ingredient.name.toLowerCase()));\n\n    // Vérifie que la recette ne contient pas d'ingrédients évités\n    const contientIngredientsEviter = ingredientEviter.some(ingredient => recetteIngredients.includes(ingredient.name.toLowerCase()));\n\n    // Retourne vrai si la recette contient tous les ingrédients gardés et aucun évité\n    return contientIngredientsGarder && !contientIngredientsEviter;\n  });\n\n  // c'est un if else pour donner le choix si lélément est a éviter ou garder \n  const ingredientChoix = (ingredient, choix) => {\n    if (choix === \"Garder\") {\n      setIngredientGarder(prev => [...prev, ingredient]);\n      // les \"...\" la décomposition Pour dire \"le reste\" \n      setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n    } else if (choix === \"Eviter\") {\n      setIngredientEviter(prev => [...prev, ingredient]);\n      setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n    }\n  };\n  // sa permet de selectionner uniquement les ingredient dans le tableau \n  const toutIngredients = data.flatMap(recipe => recipe.ingredients);\n  const seenNames = new Set(); // Set pour suivre les noms d'ingrédients uniques\n\n  const filtreIngredients = [];\n  toutIngredients.forEach(ingredient => {\n    // Si la saisie correspond à l'ingrédient et qu'il n'a pas déjà été vu\n    if ((saisie === '' || ingredient.name.toLowerCase().includes(saisie.toLowerCase())) && !seenNames.has(ingredient.name)) {\n      filtreIngredients.push(ingredient); // Ajouter l'ingrédient filtré\n      seenNames.add(ingredient.name); // Marquer l'ingrédient comme déjà vu\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encadrementIngredientInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"biscottineMascotteInput\",\n      src: mascotteBiscottine,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"titreLogoInput\",\n      src: logoInputIngredient,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"texteSousLogoInput\",\n      children: [\"Trouve-moi \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 58\n      }, this), \" une recette !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"efege\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"fefeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"ingredientInput\",\n      value: saisie,\n      onChange: rechercheChangement,\n      type: \"text\",\n      placeHolder: \" Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), saisie !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alignementInputRecherche\",\n      children: filtreIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"inputIngredientName\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"\",\n            children: ingredient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => ingredientChoix(ingredient, \"Garder\"),\n          disabled: ingredientGarder.some(item => item.name === ingredient.name)\n          // le disabled dit si l'ingredient est garder tu ne pourras pas reclicker dessus \n          // some renverras true si item.name est strictement egal a ingredient.name \n          ,\n          children: \"Garder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => ingredientChoix(ingredient, \"Eviter\"),\n          disabled: ingredientEviter.some(item => item.name === ingredient.name),\n          children: \"Eviter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), saisie !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"inputIngredientGarder\",\n        children: \"Ingr\\xE9dients gard\\xE9s :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredientGarder.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ingredient.image,\n            alt: \"\",\n            className: \"ingredient-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => suprimerDeGarder(ingredient),\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"inputIngredientEviter\",\n        children: \"Ingr\\xE9dients \\xE9vit\\xE9s :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredientEviter.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [ingredient.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => suprimerDeEviter(ingredient),\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), filteredRecipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-list\",\n      children: filteredRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        url: recipe.url,\n        title: recipe.title,\n        preparation_time: recipe.preparation_time,\n        tags: recipe.tags\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune recette ne correspond aux crit\\xE8res s\\xE9lectionn\\xE9s.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(IngredientInput, \"nBCni9XDN+dQxLr26WiAlIGCY1g=\");\n_c = IngredientInput;\n;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["React","useState","data","mascotteBiscottine","logoInputIngredient","RecipeResults","jsxDEV","_jsxDEV","IngredientInput","_s","saisie","setSaisie","ingredientGarder","setIngredientGarder","ingredientEviter","setIngredientEviter","rechercheChangement","event","target","value","suprimerDeEviter","ingredient","prev","filter","item","name","suprimerDeGarder","filteredRecipes","recipe","recetteIngredients","ingredients","map","ing","toLowerCase","contientIngredientsGarder","every","includes","contientIngredientsEviter","some","ingredientChoix","choix","toutIngredients","flatMap","seenNames","Set","filtreIngredients","forEach","has","push","add","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeHolder","index","onClick","disabled","image","length","RecipeCard","url","title","preparation_time","tags","_c","$RefreshReg$"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\n// Le json \r\nimport data from '../data/recipes.json';\r\n// le css \r\nimport './IngredientInput.css';\r\n// image de la mascotte \r\nimport mascotteBiscottine from '../assets/mascotte.png'\r\n// le logo \r\nimport logoInputIngredient from '../assets/logo.png'\r\n\r\nimport RecipeResults from './components/RecipeResults.js';\r\n\r\n\r\n\r\nfunction IngredientInput() {\r\n    // stock la recherche \r\n    const [saisie, setSaisie] = useState(\"\");\r\n    // Pourquoi const car tu modifie l'état lui meme et non saisie\r\n    // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\r\n\r\n    // garder les ingredient \r\n    const [ingredientGarder, setIngredientGarder] = useState([]);\r\n    // Le tableau vide permet que quand l'utilisateur press le button sa rentre dans le tableau vide\r\n\r\n    // ingredient eviter\r\n    const [ingredientEviter, setIngredientEviter] = useState([]);\r\n\r\n    // Ici on recupere la saisie de l'utilisateur et met a jour saisie\r\n    const rechercheChangement = (event) => {\r\n        setSaisie(event.target.value);\r\n    };\r\n    // event convention pour dire Evenement parfois racourci par e \r\n\r\n    // permet de suprimer des ingredient de \"eviter \" \r\n    const suprimerDeEviter = (ingredient) => {\r\n        setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n    // Pourquoi prev ? une convention pour dire précédent sa represente l'etat avant le changement \r\n\r\n    //   permet de suprimer les ingredient de \"garder\"  \r\n    const suprimerDeGarder = (ingredient) => {\r\n        setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n\r\n    const filteredRecipes = data.filter((recipe) => {\r\n      const recetteIngredients = recipe.ingredients.map(ing => ing.name.toLowerCase());\r\n\r\n      // Vérifie si tous les ingrédients gardés sont dans la recette\r\n      const contientIngredientsGarder = ingredientGarder.every((ingredient) => \r\n          recetteIngredients.includes(ingredient.name.toLowerCase())\r\n      );\r\n\r\n      // Vérifie que la recette ne contient pas d'ingrédients évités\r\n      const contientIngredientsEviter = ingredientEviter.some((ingredient) =>\r\n          recetteIngredients.includes(ingredient.name.toLowerCase())\r\n      );\r\n\r\n      // Retourne vrai si la recette contient tous les ingrédients gardés et aucun évité\r\n      return contientIngredientsGarder && !contientIngredientsEviter;\r\n  });\r\n\r\n    // c'est un if else pour donner le choix si lélément est a éviter ou garder \r\n    const ingredientChoix = (ingredient, choix) => {\r\n        if (choix === \"Garder\") {\r\n            setIngredientGarder((prev) => [...prev, ingredient]);\r\n            // les \"...\" la décomposition Pour dire \"le reste\" \r\n            setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        } else if (choix === \"Eviter\") {\r\n            setIngredientEviter((prev) => [...prev, ingredient]);\r\n            setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        }\r\n    };\r\n    // sa permet de selectionner uniquement les ingredient dans le tableau \r\n    const toutIngredients = data.flatMap(recipe => recipe.ingredients);\r\n\r\n    const seenNames = new Set(); // Set pour suivre les noms d'ingrédients uniques\r\n\r\n    const filtreIngredients = [];\r\n    toutIngredients.forEach(ingredient => {\r\n      // Si la saisie correspond à l'ingrédient et qu'il n'a pas déjà été vu\r\n      if ((saisie === '' || ingredient.name.toLowerCase().includes(saisie.toLowerCase())) && !seenNames.has(ingredient.name)) {\r\n        filtreIngredients.push(ingredient); // Ajouter l'ingrédient filtré\r\n        seenNames.add(ingredient.name); // Marquer l'ingrédient comme déjà vu\r\n      }\r\n    });\r\n   \r\n\r\n    return (\r\n\r\n        <div className=\"encadrementIngredientInput\">\r\n\r\n\r\n            {/* Image de la mascotte  */}\r\n            <img className='biscottineMascotteInput' src={mascotteBiscottine} alt='' />\r\n            {/* Image du logo  */}\r\n            <img className='titreLogoInput' src={logoInputIngredient} alt='' />\r\n            {/* Texte entredessous du Logo  */}\r\n            <p className='texteSousLogoInput'>Trouve-moi <br /> une recette !</p>\r\n\r\n            <p>efege</p>\r\n            <p>fefeg</p>\r\n            {/* input pour la saisie utilisateur  */}\r\n            <input className=\"ingredientInput\"\r\n                value={saisie}\r\n                onChange={rechercheChangement}\r\n                type=\"text\"\r\n                placeHolder=\" Yes\" />\r\n\r\n\r\n             {/* resultat recherche  */}\r\n            {saisie !== '' && (\r\n                <div className=\"alignementInputRecherche\">\r\n                    {filtreIngredients.map((ingredient, index) => (\r\n                        <div key={index} className=\"\">\r\n                            \r\n                            <ul className='inputIngredientName'>\r\n                                {/* ce qui aparait dans la barre de recherche  */}\r\n                            <li className=''>{ingredient.name}</li>\r\n                            </ul>\r\n                            {/* button garder  */}\r\n                            <button\r\n                                onClick={() => ingredientChoix(ingredient, \"Garder\")}\r\n                                disabled={ingredientGarder.some(item => item.name === ingredient.name)}\r\n                                // le disabled dit si l'ingredient est garder tu ne pourras pas reclicker dessus \r\n                                // some renverras true si item.name est strictement egal a ingredient.name \r\n                            >\r\n                                {/* ici faut mettre l'image \"+\" */}\r\n                                Garder\r\n                            </button>\r\n\r\n                            {/* button  eviter  */}\r\n                            <button\r\n                                onClick={() => ingredientChoix(ingredient, \"Eviter\")}\r\n                                disabled={ingredientEviter.some(item => item.name === ingredient.name)}\r\n                            >\r\n                                {/* ici faut mettre l'image \"-\" */}\r\n                                Eviter\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n       {saisie !== '' && (\r\n        <div className=''>\r\n          <p className='inputIngredientGarder'>Ingrédients gardés :</p>\r\n          <ul>\r\n            {ingredientGarder.map((ingredient, index) => (\r\n              <li key={index}>\r\n                <img src={ingredient.image} alt='' className=\"ingredient-image\" />\r\n                {/* button pour suprimer de a garder  */}\r\n                <button onClick={() => suprimerDeGarder(ingredient)}>\r\n                    {/* l'icone suprimer a mettre  */}\r\n                  Supprimer\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <p className='inputIngredientEviter' >Ingrédients évités :</p>\r\n          <ul>\r\n            {ingredientEviter.map((ingredient, index) => (\r\n              <li key={index}>\r\n                {ingredient.name}\r\n                {/* button pour suprimer de a eviter  */}\r\n                <button onClick={() => suprimerDeEviter(ingredient)}>\r\n                    {/* l'icone suprimer a mettre  */}\r\n                  Supprimer\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n  {filteredRecipes.length > 0 ? (\r\n                <div className=\"recipe-list\">\r\n                    {filteredRecipes.map((recipe, index) => (\r\n                        <RecipeCard\r\n                            key={index}\r\n                            url={recipe.url}\r\n                            title={recipe.title}\r\n                            preparation_time={recipe.preparation_time}\r\n                            tags={recipe.tags}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>Aucune recette ne correspond aux critères sélectionnés.</p>\r\n            )}\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default IngredientInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}