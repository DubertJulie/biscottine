{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './data/recipes.json'; // Importation des données (recettes)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientSearch() {\n  _s();\n  const [query, setQuery] = useState(\"\"); // État pour la recherche\n  const [sortCriteria, setSortCriteria] = useState(\"name\"); // Critère de tri (par défaut : nom de l'ingrédient)\n\n  // Fonction qui gère la modification du champ de recherche\n  const handleSearchChange = event => {\n    setQuery(event.target.value);\n  };\n\n  // Fonction pour gérer le changement du critère de tri\n  const handleSortChange = event => {\n    setSortCriteria(event.target.value);\n  };\n\n  // Extraire tous les ingrédients de toutes les recettes\n  const allIngredients = data.flatMap(post => post.ingredients);\n\n  // Filtrer les ingrédients selon la recherche de l'utilisateur\n  const filteredIngredients = allIngredients.filter(ingredient => query === '' || ingredient.name.toLowerCase().includes(query.toLowerCase()));\n\n  // Fonction de tri des ingrédients\n  const sortedIngredients = filteredIngredients.sort((a, b) => {\n    if (sortCriteria === \"name\") {\n      // Trier par nom d'ingrédient (par ordre alphabétique)\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    } else {\n      return 0; // Aucun tri par défaut\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleSearchChange,\n      placeholder: \"Rechercher un ingr\\xE9dient...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Trier par :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortCriteria,\n          onChange: handleSortChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Nom de l'ingr\\xE9dient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"quantity\",\n            children: \"Quantit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(IngredientSearch, \"8/5eqzFuDbreevlzGkKIdXghRAs=\");\n_c = IngredientSearch;\nexport default IngredientSearch;\nvar _c;\n$RefreshReg$(_c, \"IngredientSearch\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","IngredientSearch","_s","query","setQuery","sortCriteria","setSortCriteria","handleSearchChange","event","target","value","handleSortChange","allIngredients","flatMap","post","ingredients","filteredIngredients","filter","ingredient","name","toLowerCase","includes","sortedIngredients","sort","a","b","localeCompare","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport data from './data/recipes.json';  // Importation des données (recettes)\r\n\r\nfunction IngredientSearch() {\r\n  const [query, setQuery] = useState(\"\");  // État pour la recherche\r\n  const [sortCriteria, setSortCriteria] = useState(\"name\");  // Critère de tri (par défaut : nom de l'ingrédient)\r\n\r\n  // Fonction qui gère la modification du champ de recherche\r\n  const handleSearchChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  // Fonction pour gérer le changement du critère de tri\r\n  const handleSortChange = (event) => {\r\n    setSortCriteria(event.target.value);\r\n  };\r\n\r\n  // Extraire tous les ingrédients de toutes les recettes\r\n  const allIngredients = data.flatMap(post => post.ingredients);\r\n\r\n  // Filtrer les ingrédients selon la recherche de l'utilisateur\r\n  const filteredIngredients = allIngredients.filter(ingredient => \r\n    query === '' || ingredient.name.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n\r\n  // Fonction de tri des ingrédients\r\n  const sortedIngredients = filteredIngredients.sort((a, b) => {\r\n    if (sortCriteria === \"name\") {\r\n      // Trier par nom d'ingrédient (par ordre alphabétique)\r\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\r\n    } else  {\r\n      return 0;  // Aucun tri par défaut\r\n    }\r\n    \r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Champ de recherche pour filtrer les ingrédients */}\r\n      <input \r\n        type=\"text\" \r\n        value={query} \r\n        onChange={handleSearchChange} \r\n        placeholder=\"Rechercher un ingrédient...\" \r\n      />\r\n\r\n      {/* Choix du critère de tri */}\r\n      <div>\r\n        <label>\r\n          Trier par : \r\n          <select value={sortCriteria} onChange={handleSortChange}>\r\n            <option value=\"name\">Nom de l'ingrédient</option>\r\n            <option value=\"quantity\">Quantité</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      {/* Affichage des ingrédients triés */}\r\n      <ul>\r\n        {sortedIngredients.map((ingredient, index) => (\r\n          <li key={index}>\r\n            {ingredient.name} \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}