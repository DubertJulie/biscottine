{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeSearch() {\n  _s();\n  // Déclaration de l'état 'query' pour la recherche\n  const [query, setQuery] = useState(\"\"); // Initialisation de la valeur du champ de recherche\n\n  // Fonction qui gère la modification du champ de recherche\n  const handleSearchChange = event => {\n    setQuery(event.target.value); // Met à jour l'état 'query' avec la valeur de l'input\n  };\n\n  // Filtrage des recettes en fonction de la recherche\n  const filteredRecipes = data.filter(post => query === '' || post.name.toLowerCase().includes(query.toLowerCase()) // Filtrer par nom\n  );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query // La valeur du champ est liée à l'état 'query'\n      ,\n      onChange: handleSearchChange // On met à jour 'query' à chaque modification de l'input\n      ,\n      placeholder: \"Rechercher une recette...\" // Texte d'instruction dans l'input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredRecipes.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeSearch, \"HYX2QbDDdTtlu7GfoQbAPZOIM6k=\");\n_c = RecipeSearch;\nexport default RecipeSearch;\nvar _c;\n$RefreshReg$(_c, \"RecipeSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecipeSearch","_s","query","setQuery","handleSearchChange","event","target","value","filteredRecipes","data","filter","post","name","toLowerCase","includes","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","index","className","_c","$RefreshReg$"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RecipeSearch() {\r\n  // Déclaration de l'état 'query' pour la recherche\r\n  const [query, setQuery] = useState(\"\");  // Initialisation de la valeur du champ de recherche\r\n\r\n  // Fonction qui gère la modification du champ de recherche\r\n  const handleSearchChange = (event) => {\r\n    setQuery(event.target.value);  // Met à jour l'état 'query' avec la valeur de l'input\r\n  };\r\n\r\n  // Filtrage des recettes en fonction de la recherche\r\n  const filteredRecipes = data.filter(post => \r\n    query === '' || post.name.toLowerCase().includes(query.toLowerCase()) // Filtrer par nom\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* Champ de recherche */}\r\n      <input \r\n        type=\"text\" \r\n        value={query} // La valeur du champ est liée à l'état 'query'\r\n        onChange={handleSearchChange} // On met à jour 'query' à chaque modification de l'input\r\n        placeholder=\"Rechercher une recette...\" // Texte d'instruction dans l'input\r\n      />\r\n\r\n      {/* Affichage des recettes filtrées */}\r\n      <div>\r\n        {filteredRecipes.map((post, index) => (\r\n          <div className=\"box\" key={index}> {/* Utilisation de l'index comme clé */}\r\n            <p>{post.name}</p> {/* Affichage du nom de la recette */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzC;EACA,MAAMO,kBAAkB,GAAIC,KAAK,IAAK;IACpCF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE;EACjC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGC,IAAI,CAACC,MAAM,CAACC,IAAI,IACtCT,KAAK,KAAK,EAAE,IAAIS,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,KAAK,CAACW,WAAW,CAAC,CAAC,CAAC,CAAC;EACxE,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBAEEhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEL,KAAM,CAAC;MAAA;MACde,QAAQ,EAAEb,kBAAmB,CAAC;MAAA;MAC9Bc,WAAW,EAAC,2BAA2B,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAGFvB,OAAA;MAAAgB,QAAA,EACGP,eAAe,CAACe,GAAG,CAAC,CAACZ,IAAI,EAAEa,KAAK,kBAC/BzB,OAAA;QAAK0B,SAAS,EAAC,KAAK;QAAAV,QAAA,GAAa,GAAC,eAChChB,OAAA;UAAAgB,QAAA,EAAIJ,IAAI,CAACC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC;MAAA,GADKE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE1B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAlCQD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAoCrB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}