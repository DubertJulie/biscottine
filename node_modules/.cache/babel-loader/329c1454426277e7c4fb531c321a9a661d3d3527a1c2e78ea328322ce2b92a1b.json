{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Le json \nimport data from './data/recipes.json';\n// le css \nimport './IngredientInput.css';\n// image de la mascotte \nimport mascotteBiscottine from '../assets/mascotte.png';\n// le logo \nimport logoInputIngredient from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ingredientInput() {\n  _s();\n  // stock la recherche \n  const [saisie, setSaisie] = useState(\"\");\n  // Pourquoi const car tu modifie l'état lui meme et non saisie\n  // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\n\n  // garder les ingredient \n  const [ingredientGarder, setIngredientGarder] = useState([]);\n  // Le tableau vide permet que quand l'utilisateur press le button sa rentre dans le tableau vide\n\n  // ingredient eviter\n  const [ingredientEviter, setIngredientEviter] = useState([]);\n\n  // Ici on recupere la saisie de l'utilisateur et met a jour saisie\n  const handleSearchChange = event => {\n    setSaisie(event.target.value);\n  };\n  // event convention pour dire Evenement parfois racourci par e \n\n  // permet de suprimer des ingredient de \"eviter \" \n  const suprimerDeEviter = ingredient => {\n    setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n  // Pourquoi prev ? une convention pour dire précédent sa represente l'etat avant le changement \n\n  //   permet de suprimer les ingredient de \"garder\"  \n  const suprimerDeGarder = ingredient => {\n    setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n\n  // c'est un if else pour donner le choix si lélément est a éviter ou garder \n  const handleIngredientChoice = (ingredient, choix) => {\n    if (choix === \"garder\") {\n      setIngredientGarder(prev => [...prev, ingredient]);\n      // les \"...\" la décomposition Pour dire \"le reste\" \n      setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n    } else if (choix === \"Eviter\") {\n      setIngredientEviter(prev => [...prev, ingredient]);\n      setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n    }\n  };\n  // sa permet de selectionner uniquement les ingredient dans le tableau \n  const toutIngredients = data.flatMap(recipe => recipe.ingredients);\n\n  //filter les ingredient et prendre en compte les majuscule et les mettre en minuscule pris de la saisie utilisateur \n  const filtreIngredients = toutIngredients.filter(ingredient => saisie === '' || ingredient.name.toLowerCase().includes(saisie.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encadrementIngredientInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"biscottineMascotteInput\",\n      src: mascotteBiscottine,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"titreLogoInput\",\n      src: logoInputIngredient,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"texteSousLogoInput\",\n      children: [\"Trouve-moi \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 58\n      }, this), \" une recette !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"ingredientInput\",\n      value: saisie,\n      onChange: handleSearchChange,\n      type: \"text\",\n      placeHolder: \" Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), saisie !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients-list\",\n      children: filtreIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ingredient.image,\n          alt: ingredient.name,\n          className: \"ingredient-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ingredient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleIngredientChoice(ingredient, \"Garder\"),\n          disabled: ingredientGarder.some(item => item.name === ingredient.name),\n          dans: true,\n          notre: true,\n          cas: true,\n          some: true,\n          renverras: true,\n          true: true,\n          si: true,\n          some: true,\n          est: true,\n          children: \"Garder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleIngredientChoice(ingredient, \"Eviter\"),\n          disabled: ingredientEviter.some(item => item.name === ingredient.name),\n          children: \"\\xC9viter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(ingredientInput, \"nBCni9XDN+dQxLr26WiAlIGCY1g=\");\n;\nexport default ingredientInput;","map":{"version":3,"names":["React","useState","data","mascotteBiscottine","logoInputIngredient","jsxDEV","_jsxDEV","ingredientInput","_s","saisie","setSaisie","ingredientGarder","setIngredientGarder","ingredientEviter","setIngredientEviter","handleSearchChange","event","target","value","suprimerDeEviter","ingredient","prev","filter","item","name","suprimerDeGarder","handleIngredientChoice","choix","toutIngredients","flatMap","recipe","ingredients","filtreIngredients","toLowerCase","includes","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeHolder","map","index","image","onClick","disabled","some","dans","notre","cas","renverras","true","si","est"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\n// Le json \r\nimport data from './data/recipes.json';\r\n// le css \r\nimport './IngredientInput.css';\r\n// image de la mascotte \r\nimport mascotteBiscottine from '../assets/mascotte.png'\r\n// le logo \r\nimport logoInputIngredient from '../assets/logo.png'\r\n\r\n\r\n\r\n\r\nfunction ingredientInput() {\r\n    // stock la recherche \r\n    const [saisie, setSaisie] = useState(\"\");\r\n    // Pourquoi const car tu modifie l'état lui meme et non saisie\r\n    // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\r\n\r\n    // garder les ingredient \r\n    const [ingredientGarder, setIngredientGarder] = useState([]);\r\n    // Le tableau vide permet que quand l'utilisateur press le button sa rentre dans le tableau vide\r\n\r\n    // ingredient eviter\r\n    const [ingredientEviter, setIngredientEviter] = useState([]);\r\n\r\n    // Ici on recupere la saisie de l'utilisateur et met a jour saisie\r\n    const handleSearchChange = (event) => {\r\n        setSaisie(event.target.value);\r\n    };\r\n    // event convention pour dire Evenement parfois racourci par e \r\n\r\n    // permet de suprimer des ingredient de \"eviter \" \r\n    const suprimerDeEviter = (ingredient) => {\r\n        setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n    // Pourquoi prev ? une convention pour dire précédent sa represente l'etat avant le changement \r\n\r\n    //   permet de suprimer les ingredient de \"garder\"  \r\n    const suprimerDeGarder = (ingredient) => {\r\n        setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n\r\n    // c'est un if else pour donner le choix si lélément est a éviter ou garder \r\n    const handleIngredientChoice = (ingredient, choix) => {\r\n        if (choix === \"garder\") {\r\n            setIngredientGarder((prev) => [...prev, ingredient]);\r\n            // les \"...\" la décomposition Pour dire \"le reste\" \r\n            setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        } else if (choix === \"Eviter\") {\r\n            setIngredientEviter((prev) => [...prev, ingredient]);\r\n            setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        }\r\n    };\r\n    // sa permet de selectionner uniquement les ingredient dans le tableau \r\n    const toutIngredients = data.flatMap(recipe => recipe.ingredients);\r\n\r\n    //filter les ingredient et prendre en compte les majuscule et les mettre en minuscule pris de la saisie utilisateur \r\n    const filtreIngredients = toutIngredients.filter(ingredient =>\r\n        saisie === '' || ingredient.name.toLowerCase().includes(saisie.toLowerCase())\r\n    );\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"encadrementIngredientInput\">\r\n\r\n\r\n            {/* Image de la mascotte  */}\r\n            <img className='biscottineMascotteInput' src={mascotteBiscottine} alt='' />\r\n            {/* Image du logo  */}\r\n            <img className='titreLogoInput' src={logoInputIngredient} alt='' />\r\n            {/* Texte entredessous du Logo  */}\r\n            <p className='texteSousLogoInput'>Trouve-moi <br /> une recette !</p>\r\n\r\n            <p></p>\r\n            <p></p>\r\n            <input className=\"ingredientInput\"\r\n                value={saisie}\r\n                onChange={handleSearchChange}\r\n                type=\"text\"\r\n                placeHolder=\" Yes\" />\r\n\r\n            {saisie !== '' && (\r\n                <div className=\"ingredients-list\">\r\n                    {filtreIngredients.map((ingredient, index) => (\r\n                        <div key={index} className=\"ingredient-card\">\r\n                            \r\n                            <img src={ingredient.image} alt={ingredient.name} className=\"ingredient-image\" />\r\n                            <p>{ingredient.name}</p>\r\n\r\n                            {/* button on click garder  */}\r\n                            <button\r\n                                onClick={() => handleIngredientChoice(ingredient, \"Garder\")}\r\n                                disabled={ingredientGarder.some(item => item.name === ingredient.name)}\r\n                                dans notre cas some renverras true si some est \r\n                            >\r\n                                Garder\r\n                            </button>\r\n\r\n                            {/* button on click éviter  */}\r\n                            <button\r\n                                onClick={() => handleIngredientChoice(ingredient, \"Eviter\")}\r\n                                disabled={ingredientEviter.some(item => item.name === ingredient.name)}\r\n                            >\r\n                                Éviter\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ingredientInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}