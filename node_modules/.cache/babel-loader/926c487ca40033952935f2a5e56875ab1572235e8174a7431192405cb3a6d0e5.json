{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\decdu\\\\OneDrive\\\\Bureau\\\\Biscotine\\\\biscottine\\\\src\\\\components\\\\IngredientInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Le json \nimport data from '../data/recipes.json';\n// le css \nimport './IngredientInput.css';\n// css des card\nimport './RecipeResults.css';\n// image de la mascotte \nimport mascotteBiscottine from '../assets/mascotte.png';\n// le logo \nimport logoInputIngredient from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientInput() {\n  _s();\n  // stock la recherche \n  const [saisie, setSaisie] = useState(\"\");\n  // Pourquoi const car tu modifie l'état lui meme et non saisie\n  // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\n\n  // garder les ingredient \n  const [ingredientGarder, setIngredientGarder] = useState([]);\n  // ingredient eviter\n  const [ingredientEviter, setIngredientEviter] = useState([]);\n  // tag \n  const [selectedTags, setSelectedTags] = useState([]);\n  const rechercheChangement = event => {\n    setSaisie(event.target.value);\n  };\n\n  // permet de suprimer des ingredient de \"eviter \" \n  const suprimerDeEviter = ingredient => {\n    setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n  //   permet de suprimer les ingredient de \"garder\"  \n  const suprimerDeGarder = ingredient => {\n    setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n  };\n\n  // permet de verifier si \n  const toggleTag = tag => {\n    setSelectedTags(previous => previous.includes(tag) ? previous.filter(tri => tri !== tag) : [...previous, tag]);\n  };\n\n  // permet de verifier si chaque tag est unique\n  const toutLesTags = Array.from(new Set(data.flatMap(recipe => recipe.tags)));\n  const filteredRecipes = data.filter(recipe => {\n    const recetteIngredients = recipe.ingredients.map(ing => ing.name.toLowerCase());\n    // Vérifie si tous les ingrédients gardés sont dans la recette\n    const contientIngredientsGarder = ingredientGarder.length === 0 || ingredientGarder.some(ingredient => recetteIngredients.includes(ingredient.name.toLowerCase()));\n    // Vérifie que la recette ne contient pas d'ingrédients évités\n    const contientIngredientsEviter = ingredientEviter.some(ingredient => recetteIngredients.includes(ingredient.name.toLowerCase()));\n    // La premiere verifie si aucun tag n'est selectionner la deuxieme si un tag est selectionner verifie si le tag est dans le repas afficher \n    const contientTags = selectedTags.length === 0 || selectedTags.every(tag => recipe.tags.includes(tag));\n    // Retourne true si la recette contient tous les ingrédients gardés et aucun évité, \n    return contientIngredientsGarder && !contientIngredientsEviter && contientTags;\n  });\n\n  //if else pour donner le choix si lélément est a éviter ou garder \n  const ingredientChoix = (ingredient, choix) => {\n    if (choix === \"Garder\") {\n      setIngredientGarder(prev => [...prev, ingredient]);\n      setIngredientEviter(prev => prev.filter(item => item.name !== ingredient.name));\n    } else if (choix === \"Eviter\") {\n      setIngredientEviter(prev => [...prev, ingredient]);\n      setIngredientGarder(prev => prev.filter(item => item.name !== ingredient.name));\n    }\n  };\n\n  // sa permet de selectionner uniquement les ingredient dans le tableau \n  const toutIngredients = data.flatMap(recipe => recipe.ingredients);\n\n  // permet que chaque ingredient sois unique pas de doubon \n  const ingredientUnique = new Set();\n  const filtreIngredients = [];\n\n  // En gros va vérifier chaque ingredient est unique et l'injecter dans \"filtreingredients\" si il est unqiue si il ne l'est pas il va le recaler\n  toutIngredients.forEach(ingredient => {\n    if (!ingredientUnique.has(ingredient.name) && ingredient.name.toLowerCase().includes(saisie.toLowerCase())) {\n      filtreIngredients.push(ingredient);\n      ingredientUnique.add(ingredient.name);\n    }\n  });\n  function RecipeCard(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RecipeResults-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.url,\n        className: \"RecipeResults-card-img\",\n        alt: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RecipeResults-card-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RecipeResults-card-title\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RecipeResults-card-preparation\",\n          children: props.preparation_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n  function RecipeResults({\n    recipe\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RecipeResults\",\n      children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n        url: recipe.url,\n        title: recipe.title,\n        preparation_time: recipe.preparation_time,\n        tags: recipe.tags\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encadrementIngredientInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"encadrementRecherche\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"biscottineMascotteInput\",\n        src: mascotteBiscottine,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"titreLogoInput\",\n        src: logoInputIngredient,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"texteSousLogoInput\",\n        children: [\"Trouve-moi \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 62\n        }, this), \" une recette !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagFilter\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Filtrer par tags \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tagFilterButtons\",\n          children: toutLesTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedTags.includes(tag) ? 'tagButton active' : 'tagButton',\n            onClick: () => toggleTag(tag),\n            children: [\" \", tag]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"choisis tes ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"ingredientInput\",\n        value: saisie,\n        onChange: rechercheChangement,\n        type: \"text\",\n        placeHolder: \"Recherche d'ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), saisie !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alignementInputRecherche\",\n        children: filtreIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placementInputIngredient\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"inputIngredientName\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"ingredientRechercheInput\",\n              children: ingredient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonGarder\",\n            onClick: () => ingredientChoix(ingredient, \"Garder\"),\n            disabled: ingredientGarder.some(item => item.name === ingredient.name)\n            // le disabled dit si l'ingredient est garder tu ne pourras pas reclicker dessus \n            // some renverras true si item.name est strictement egal a ingredient.name \n            ,\n            children: \" + \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonEviter\",\n            onClick: () => ingredientChoix(ingredient, \"Eviter\"),\n            disabled: ingredientEviter.some(item => item.name === ingredient.name),\n            children: \" - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"textIngredientSelect\",\n          children: \"Ingr\\xE9dients gard\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encradrementGarderIngredient\",\n          children: ingredientGarder.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredientSelectionnerGarder\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cadreIngredientSelectioner\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonSuprimer\",\n                onClick: () => suprimerDeGarder(ingredient),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ingredient.url1,\n                alt: \"\",\n                className: \"choixIngredientImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"textIngredientSousImg\",\n                children: [ingredient.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"textIngredientSelect\",\n          children: \"Ingr\\xE9dients \\xE9vit\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encradrementGarderIngredient\",\n          children: ingredientEviter.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredientSelectionnerGarder\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cadreIngredientSelectioner\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonSuprimer\",\n                onClick: () => suprimerDeEviter(ingredient),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ingredient.url1,\n                alt: \"\",\n                className: \"choixIngredientEviterImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"textIngredientSousImg\",\n                children: [ingredient.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), filteredRecipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultatRecherchePlat\",\n      children: filteredRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(RecipeResults, {\n        recipe: recipe\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune recette \\xE0 votre go\\xFBt ? Hmm... vous aimez sans doute la simplicit\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_s(IngredientInput, \"QYTEo8qbf8D281haHHjCJNFnddQ=\");\n_c = IngredientInput;\n;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["React","useState","data","mascotteBiscottine","logoInputIngredient","jsxDEV","_jsxDEV","IngredientInput","_s","saisie","setSaisie","ingredientGarder","setIngredientGarder","ingredientEviter","setIngredientEviter","selectedTags","setSelectedTags","rechercheChangement","event","target","value","suprimerDeEviter","ingredient","prev","filter","item","name","suprimerDeGarder","toggleTag","tag","previous","includes","tri","toutLesTags","Array","from","Set","flatMap","recipe","tags","filteredRecipes","recetteIngredients","ingredients","map","ing","toLowerCase","contientIngredientsGarder","length","some","contientIngredientsEviter","contientTags","every","ingredientChoix","choix","toutIngredients","ingredientUnique","filtreIngredients","forEach","has","push","add","RecipeCard","props","className","children","src","url","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","preparation_time","RecipeResults","id","index","onClick","onChange","type","placeHolder","disabled","url1","_c","$RefreshReg$"],"sources":["C:/Users/decdu/OneDrive/Bureau/Biscotine/biscottine/src/components/IngredientInput.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n// Le json \r\nimport data from '../data/recipes.json';\r\n// le css \r\nimport './IngredientInput.css';\r\n// css des card\r\nimport './RecipeResults.css';\r\n// image de la mascotte \r\nimport mascotteBiscottine from '../assets/mascotte.png'\r\n// le logo \r\nimport logoInputIngredient from '../assets/logo.png'\r\n\r\nfunction IngredientInput() {\r\n    // stock la recherche \r\n    const [saisie, setSaisie] = useState(\"\");\r\n    // Pourquoi const car tu modifie l'état lui meme et non saisie\r\n    // ici on utilise la valeur d'etat saisie et setSaisie qui permet de mettre a jour l'etat de saisie\r\n\r\n    // garder les ingredient \r\n    const [ingredientGarder, setIngredientGarder] = useState([]);\r\n    // ingredient eviter\r\n    const [ingredientEviter, setIngredientEviter] = useState([]);\r\n    // tag \r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    const rechercheChangement = (event) => {\r\n        setSaisie(event.target.value);\r\n    };\r\n\r\n    // permet de suprimer des ingredient de \"eviter \" \r\n    const suprimerDeEviter = (ingredient) => {\r\n        setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n    //   permet de suprimer les ingredient de \"garder\"  \r\n    const suprimerDeGarder = (ingredient) => {\r\n        setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n    };\r\n\r\n    // permet de verifier si \r\n    const toggleTag = (tag) => {\r\n        setSelectedTags((previous) =>\r\n            previous.includes(tag) ? previous.filter((tri) => tri !== tag) : [...previous, tag]\r\n        );\r\n    };\r\n\r\n    // permet de verifier si chaque tag est unique\r\n    const toutLesTags = Array.from(new Set(data.flatMap(recipe => recipe.tags)));\r\n\r\n    const filteredRecipes = data.filter((recipe) => {\r\n        const recetteIngredients = recipe.ingredients.map(ing => ing.name.toLowerCase());\r\n        // Vérifie si tous les ingrédients gardés sont dans la recette\r\n        const contientIngredientsGarder = ingredientGarder.length === 0 ||\r\n            ingredientGarder.some((ingredient) =>\r\n                recetteIngredients.includes(ingredient.name.toLowerCase())\r\n            );\r\n        // Vérifie que la recette ne contient pas d'ingrédients évités\r\n        const contientIngredientsEviter = ingredientEviter.some((ingredient) =>\r\n            recetteIngredients.includes(ingredient.name.toLowerCase())\r\n        );\r\n        // La premiere verifie si aucun tag n'est selectionner la deuxieme si un tag est selectionner verifie si le tag est dans le repas afficher \r\n        const contientTags = selectedTags.length === 0 || selectedTags.every((tag) =>\r\n            recipe.tags.includes(tag)\r\n        );\r\n        // Retourne true si la recette contient tous les ingrédients gardés et aucun évité, \r\n        return contientIngredientsGarder && !contientIngredientsEviter && contientTags;\r\n    });\r\n\r\n    //if else pour donner le choix si lélément est a éviter ou garder \r\n    const ingredientChoix = (ingredient, choix) => {\r\n        if (choix === \"Garder\") {\r\n            setIngredientGarder((prev) => [...prev, ingredient]);\r\n            setIngredientEviter((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        } else if (choix === \"Eviter\") {\r\n            setIngredientEviter((prev) => [...prev, ingredient]);\r\n            setIngredientGarder((prev) => prev.filter(item => item.name !== ingredient.name));\r\n        }\r\n    };\r\n\r\n    // sa permet de selectionner uniquement les ingredient dans le tableau \r\n    const toutIngredients = data.flatMap(recipe => recipe.ingredients);\r\n\r\n    // permet que chaque ingredient sois unique pas de doubon \r\n    const ingredientUnique = new Set();\r\n\r\n    const filtreIngredients = [];\r\n\r\n\r\n    // En gros va vérifier chaque ingredient est unique et l'injecter dans \"filtreingredients\" si il est unqiue si il ne l'est pas il va le recaler\r\n    toutIngredients.forEach(ingredient => {\r\n        if (!ingredientUnique.has(ingredient.name) && ingredient.name.toLowerCase().includes(saisie.toLowerCase())) {\r\n            filtreIngredients.push(ingredient);\r\n            ingredientUnique.add(ingredient.name);\r\n        }\r\n    });\r\n\r\n\r\n    function RecipeCard(props) {\r\n        return (\r\n            <div className=\"RecipeResults-card\">\r\n                <img src={props.url} className=\"RecipeResults-card-img\" alt={props.title} />\r\n                <div className=\"RecipeResults-card-info\">\r\n                    <div className=\"RecipeResults-card-title\">{props.title}</div>\r\n                    <div className=\"RecipeResults-card-preparation\">{props.preparation_time}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RecipeResults({ recipe }) {\r\n        return (\r\n            <div className=\"RecipeResults\">\r\n                <RecipeCard\r\n                    key={recipe.id}\r\n                    url={recipe.url}\r\n                    title={recipe.title}\r\n                    preparation_time={recipe.preparation_time}\r\n                    tags={recipe.tags}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"encadrementIngredientInput\">\r\n            <div className='encadrementRecherche'>\r\n                {/* Image de la mascotte  */}\r\n                <img className='biscottineMascotteInput' src={mascotteBiscottine} alt='' />\r\n                {/* Image du logo  */}\r\n                <img className='titreLogoInput' src={logoInputIngredient} alt='' />\r\n                {/* Texte entredessous du Logo  */}\r\n                <p className='texteSousLogoInput'>Trouve-moi <br /> une recette !</p>\r\n\r\n                <div className=\"tagFilter\">\r\n                    <p>Filtrer par tags </p>\r\n                    <div className=\"tagFilterButtons\">\r\n                        {toutLesTags.map((tag, index) => (\r\n                            <button\r\n                                key={index}\r\n                                className={selectedTags.includes(tag) ? 'tagButton active' : 'tagButton'}\r\n                                onClick={() => toggleTag(tag)}\r\n                            > {tag}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <p>choisis tes ingredient</p>\r\n                {/* input pour la saisie utilisateur  */}\r\n                <input className=\"ingredientInput\"\r\n                    value={saisie}\r\n                    onChange={rechercheChangement}\r\n                    type=\"text\"\r\n                    placeHolder=\"Recherche d'ingredients\" />\r\n\r\n                {/* resultat recherche  */}\r\n                {saisie !== '' && (\r\n                    <div className=\"alignementInputRecherche\">\r\n                        {filtreIngredients.map((ingredient) => (\r\n                            <div className=\"placementInputIngredient\">\r\n\r\n                                <ul className='inputIngredientName'>\r\n                                    {/* ce qui aparait dans la barre de recherche  */}\r\n                                    <li className='ingredientRechercheInput'>{ingredient.name}</li>\r\n                                </ul>\r\n                                {/* button garder  */}\r\n                                <button\r\n                                    className='buttonGarder'\r\n                                    onClick={() => ingredientChoix(ingredient, \"Garder\")}\r\n                                    disabled={ingredientGarder.some(item => item.name === ingredient.name)}\r\n                                // le disabled dit si l'ingredient est garder tu ne pourras pas reclicker dessus \r\n                                // some renverras true si item.name est strictement egal a ingredient.name \r\n                                > + </button>\r\n\r\n                                {/* button  eviter  */}\r\n                                <button\r\n                                    className='buttonEviter'\r\n                                    onClick={() => ingredientChoix(ingredient, \"Eviter\")}\r\n                                    disabled={ingredientEviter.some(item => item.name === ingredient.name)}\r\n                                > - </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {/* ingredient a gardé  */}\r\n                <div>\r\n                    <p className='textIngredientSelect'>Ingrédients gardés</p>\r\n                    <div className='encradrementGarderIngredient'>\r\n                        {ingredientGarder.map((ingredient, index) => (\r\n                            <div className='ingredientSelectionnerGarder' key={index}>\r\n                                <div className='cadreIngredientSelectioner'>\r\n                                    <button className='buttonSuprimer' onClick={() => suprimerDeGarder(ingredient)}>\r\n                                        X</button>\r\n                                    <img src={ingredient.url1}\r\n                                        alt=''\r\n                                        className=\"choixIngredientImage\" />\r\n                                    <p className='textIngredientSousImg'>{ingredient.name} </p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {/* ingredient a évité  */}\r\n                    <p className='textIngredientSelect' >Ingrédients évités</p>\r\n                    <div className='encradrementGarderIngredient'>\r\n                        {ingredientEviter.map((ingredient, index) => (\r\n                            <div className='ingredientSelectionnerGarder' key={index}>\r\n                                <div className='cadreIngredientSelectioner'>\r\n                                    <button className='buttonSuprimer' onClick={() => suprimerDeEviter(ingredient)}>\r\n                                        X</button>\r\n                                    <img src={ingredient.url1}\r\n                                        alt=''\r\n                                        className=\"choixIngredientEviterImage\" />\r\n                                    <p className='textIngredientSousImg'>{ingredient.name} </p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* la zone interessante Pour ton image */}\r\n            {filteredRecipes.length > 0 ? (\r\n                <div className=\"resultatRecherchePlat\">\r\n                    {filteredRecipes.map((recipe, index) => (\r\n                        <RecipeResults key={index} recipe={recipe} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>Aucune recette à votre goût ? Hmm... vous aimez sans doute la simplicité.</p>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\nexport default IngredientInput;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,IAAI,MAAM,sBAAsB;AACvC;AACA,OAAO,uBAAuB;AAC9B;AACA,OAAO,qBAAqB;AAC5B;AACA,OAAOC,kBAAkB,MAAM,wBAAwB;AACvD;AACA,OAAOC,mBAAmB,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA;;EAEA;EACA,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D;EACA,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5D;EACA,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMgB,mBAAmB,GAAIC,KAAK,IAAK;IACnCR,SAAS,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACrCR,mBAAmB,CAAES,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,UAAU,CAACI,IAAI,CAAC,CAAC;EACrF,CAAC;EACD;EACA,MAAMC,gBAAgB,GAAIL,UAAU,IAAK;IACrCV,mBAAmB,CAAEW,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,UAAU,CAACI,IAAI,CAAC,CAAC;EACrF,CAAC;;EAED;EACA,MAAME,SAAS,GAAIC,GAAG,IAAK;IACvBb,eAAe,CAAEc,QAAQ,IACrBA,QAAQ,CAACC,QAAQ,CAACF,GAAG,CAAC,GAAGC,QAAQ,CAACN,MAAM,CAAEQ,GAAG,IAAKA,GAAG,KAAKH,GAAG,CAAC,GAAG,CAAC,GAAGC,QAAQ,EAAED,GAAG,CACtF,CAAC;EACL,CAAC;;EAED;EACA,MAAMI,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAClC,IAAI,CAACmC,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC;EAE5E,MAAMC,eAAe,GAAGtC,IAAI,CAACsB,MAAM,CAAEc,MAAM,IAAK;IAC5C,MAAMG,kBAAkB,GAAGH,MAAM,CAACI,WAAW,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAAClB,IAAI,CAACmB,WAAW,CAAC,CAAC,CAAC;IAChF;IACA,MAAMC,yBAAyB,GAAGnC,gBAAgB,CAACoC,MAAM,KAAK,CAAC,IAC3DpC,gBAAgB,CAACqC,IAAI,CAAE1B,UAAU,IAC7BmB,kBAAkB,CAACV,QAAQ,CAACT,UAAU,CAACI,IAAI,CAACmB,WAAW,CAAC,CAAC,CAC7D,CAAC;IACL;IACA,MAAMI,yBAAyB,GAAGpC,gBAAgB,CAACmC,IAAI,CAAE1B,UAAU,IAC/DmB,kBAAkB,CAACV,QAAQ,CAACT,UAAU,CAACI,IAAI,CAACmB,WAAW,CAAC,CAAC,CAC7D,CAAC;IACD;IACA,MAAMK,YAAY,GAAGnC,YAAY,CAACgC,MAAM,KAAK,CAAC,IAAIhC,YAAY,CAACoC,KAAK,CAAEtB,GAAG,IACrES,MAAM,CAACC,IAAI,CAACR,QAAQ,CAACF,GAAG,CAC5B,CAAC;IACD;IACA,OAAOiB,yBAAyB,IAAI,CAACG,yBAAyB,IAAIC,YAAY;EAClF,CAAC,CAAC;;EAEF;EACA,MAAME,eAAe,GAAGA,CAAC9B,UAAU,EAAE+B,KAAK,KAAK;IAC3C,IAAIA,KAAK,KAAK,QAAQ,EAAE;MACpBzC,mBAAmB,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,UAAU,CAAC,CAAC;MACpDR,mBAAmB,CAAES,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,UAAU,CAACI,IAAI,CAAC,CAAC;IACrF,CAAC,MAAM,IAAI2B,KAAK,KAAK,QAAQ,EAAE;MAC3BvC,mBAAmB,CAAES,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,UAAU,CAAC,CAAC;MACpDV,mBAAmB,CAAEW,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,UAAU,CAACI,IAAI,CAAC,CAAC;IACrF;EACJ,CAAC;;EAED;EACA,MAAM4B,eAAe,GAAGpD,IAAI,CAACmC,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACI,WAAW,CAAC;;EAElE;EACA,MAAMa,gBAAgB,GAAG,IAAInB,GAAG,CAAC,CAAC;EAElC,MAAMoB,iBAAiB,GAAG,EAAE;;EAG5B;EACAF,eAAe,CAACG,OAAO,CAACnC,UAAU,IAAI;IAClC,IAAI,CAACiC,gBAAgB,CAACG,GAAG,CAACpC,UAAU,CAACI,IAAI,CAAC,IAAIJ,UAAU,CAACI,IAAI,CAACmB,WAAW,CAAC,CAAC,CAACd,QAAQ,CAACtB,MAAM,CAACoC,WAAW,CAAC,CAAC,CAAC,EAAE;MACxGW,iBAAiB,CAACG,IAAI,CAACrC,UAAU,CAAC;MAClCiC,gBAAgB,CAACK,GAAG,CAACtC,UAAU,CAACI,IAAI,CAAC;IACzC;EACJ,CAAC,CAAC;EAGF,SAASmC,UAAUA,CAACC,KAAK,EAAE;IACvB,oBACIxD,OAAA;MAAKyD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/B1D,OAAA;QAAK2D,GAAG,EAAEH,KAAK,CAACI,GAAI;QAACH,SAAS,EAAC,wBAAwB;QAACI,GAAG,EAAEL,KAAK,CAACM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ElE,OAAA;QAAKyD,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACpC1D,OAAA;UAAKyD,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAEF,KAAK,CAACM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7DlE,OAAA;UAAKyD,SAAS,EAAC,gCAAgC;UAAAC,QAAA,EAAEF,KAAK,CAACW;QAAgB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;EAEA,SAASE,aAAaA,CAAC;IAAEpC;EAAO,CAAC,EAAE;IAC/B,oBACIhC,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1B1D,OAAA,CAACuD,UAAU;QAEPK,GAAG,EAAE5B,MAAM,CAAC4B,GAAI;QAChBE,KAAK,EAAE9B,MAAM,CAAC8B,KAAM;QACpBK,gBAAgB,EAAEnC,MAAM,CAACmC,gBAAiB;QAC1ClC,IAAI,EAAED,MAAM,CAACC;MAAK,GAJbD,MAAM,CAACqC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;EAEA,oBACIlE,OAAA;IAAKyD,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACvC1D,OAAA;MAAKyD,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAEjC1D,OAAA;QAAKyD,SAAS,EAAC,yBAAyB;QAACE,GAAG,EAAE9D,kBAAmB;QAACgE,GAAG,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE3ElE,OAAA;QAAKyD,SAAS,EAAC,gBAAgB;QAACE,GAAG,EAAE7D,mBAAoB;QAAC+D,GAAG,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEnElE,OAAA;QAAGyD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,aAAW,eAAA1D,OAAA;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,kBAAc;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAErElE,OAAA;QAAKyD,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtB1D,OAAA;UAAA0D,QAAA,EAAG;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxBlE,OAAA;UAAKyD,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC5B/B,WAAW,CAACU,GAAG,CAAC,CAACd,GAAG,EAAE+C,KAAK,kBACxBtE,OAAA;YAEIyD,SAAS,EAAEhD,YAAY,CAACgB,QAAQ,CAACF,GAAG,CAAC,GAAG,kBAAkB,GAAG,WAAY;YACzEgD,OAAO,EAAEA,CAAA,KAAMjD,SAAS,CAACC,GAAG,CAAE;YAAAmC,QAAA,GACjC,GAAC,EAACnC,GAAG;UAAA,GAHG+C,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIN,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNlE,OAAA;QAAA0D,QAAA,EAAG;MAAsB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE7BlE,OAAA;QAAOyD,SAAS,EAAC,iBAAiB;QAC9B3C,KAAK,EAAEX,MAAO;QACdqE,QAAQ,EAAE7D,mBAAoB;QAC9B8D,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC;MAAyB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG3C/D,MAAM,KAAK,EAAE,iBACVH,OAAA;QAAKyD,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EACpCR,iBAAiB,CAACb,GAAG,CAAErB,UAAU,iBAC9BhB,OAAA;UAAKyD,SAAS,EAAC,0BAA0B;UAAAC,QAAA,gBAErC1D,OAAA;YAAIyD,SAAS,EAAC,qBAAqB;YAAAC,QAAA,eAE/B1D,OAAA;cAAIyD,SAAS,EAAC,0BAA0B;cAAAC,QAAA,EAAE1C,UAAU,CAACI;YAAI;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC,eAELlE,OAAA;YACIyD,SAAS,EAAC,cAAc;YACxBc,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAAC9B,UAAU,EAAE,QAAQ,CAAE;YACrD2D,QAAQ,EAAEtE,gBAAgB,CAACqC,IAAI,CAACvB,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,UAAU,CAACI,IAAI;YACzE;YACA;YAAA;YAAAsC,QAAA,EACC;UAAG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAGblE,OAAA;YACIyD,SAAS,EAAC,cAAc;YACxBc,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAAC9B,UAAU,EAAE,QAAQ,CAAE;YACrD2D,QAAQ,EAAEpE,gBAAgB,CAACmC,IAAI,CAACvB,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,UAAU,CAACI,IAAI,CAAE;YAAAsC,QAAA,EAC1E;UAAG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,eAEDlE,OAAA;QAAA0D,QAAA,gBACI1D,OAAA;UAAGyD,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAC;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1DlE,OAAA;UAAKyD,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EACxCrD,gBAAgB,CAACgC,GAAG,CAAC,CAACrB,UAAU,EAAEsD,KAAK,kBACpCtE,OAAA;YAAKyD,SAAS,EAAC,8BAA8B;YAAAC,QAAA,eACzC1D,OAAA;cAAKyD,SAAS,EAAC,4BAA4B;cAAAC,QAAA,gBACvC1D,OAAA;gBAAQyD,SAAS,EAAC,gBAAgB;gBAACc,OAAO,EAAEA,CAAA,KAAMlD,gBAAgB,CAACL,UAAU,CAAE;gBAAA0C,QAAA,EAAC;cAC3E;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACdlE,OAAA;gBAAK2D,GAAG,EAAE3C,UAAU,CAAC4D,IAAK;gBACtBf,GAAG,EAAC,EAAE;gBACNJ,SAAS,EAAC;cAAsB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvClE,OAAA;gBAAGyD,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,GAAE1C,UAAU,CAACI,IAAI,EAAC,GAAC;cAAA;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D;UAAC,GARyCI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASnD,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENlE,OAAA;UAAGyD,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAE;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3DlE,OAAA;UAAKyD,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EACxCnD,gBAAgB,CAAC8B,GAAG,CAAC,CAACrB,UAAU,EAAEsD,KAAK,kBACpCtE,OAAA;YAAKyD,SAAS,EAAC,8BAA8B;YAAAC,QAAA,eACzC1D,OAAA;cAAKyD,SAAS,EAAC,4BAA4B;cAAAC,QAAA,gBACvC1D,OAAA;gBAAQyD,SAAS,EAAC,gBAAgB;gBAACc,OAAO,EAAEA,CAAA,KAAMxD,gBAAgB,CAACC,UAAU,CAAE;gBAAA0C,QAAA,EAAC;cAC3E;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACdlE,OAAA;gBAAK2D,GAAG,EAAE3C,UAAU,CAAC4D,IAAK;gBACtBf,GAAG,EAAC,EAAE;gBACNJ,SAAS,EAAC;cAA4B;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC7ClE,OAAA;gBAAGyD,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,GAAE1C,UAAU,CAACI,IAAI,EAAC,GAAC;cAAA;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D;UAAC,GARyCI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASnD,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAELhC,eAAe,CAACO,MAAM,GAAG,CAAC,gBACvBzC,OAAA;MAAKyD,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACjCxB,eAAe,CAACG,GAAG,CAAC,CAACL,MAAM,EAAEsC,KAAK,kBAC/BtE,OAAA,CAACoE,aAAa;QAAapC,MAAM,EAAEA;MAAO,GAAtBsC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAENlE,OAAA;MAAA0D,QAAA,EAAG;IAAyE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAChE,EAAA,CAzNQD,eAAe;AAAA4E,EAAA,GAAf5E,eAAe;AAyNvB;AACD,eAAeA,eAAe;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}